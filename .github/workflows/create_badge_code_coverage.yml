on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    name: A job to test this action
    steps:
    - uses: actions/checkout@v1
    - uses: fregante/setup-git-token@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
         
    - name: Generate a issues count
      id: issues
      run: |
        # Generates a GitHub Workflow output named `issuesCnt`
        export ISSUES_COUNT=`curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "User-Agent *" -H "Accept: application/vnd.github.v3+json" -s  https://api.github.com/repos/RahulVadisetty91/RestService/issues?q=type:issue | jq ".[] | map(has("pull_request")) | length"`
        echo "##[set-output name=issuesCnt;]${ISSUES_COUNT}"
        export DEPENDENCIES=`[ ${ISSUES_COUNT} -gt 0 ] && echo "${ISSUES_COUNT} issues" || echo "issues"`
        export DEPENDENCIES_COLOR=`[ ${ISSUES_COUNT} -gt 0 ] && echo "red" || echo "green"`
        echo "${DEPENDENCIES}"
        echo "${DEPENDENCIES_COLOR}"
        echo "##[set-output name=depends;]${DEPENDENCIES}"
        echo "##[set-output name=dependscolor;]${DEPENDENCIES_COLOR}"
        
        # Create the directory where issue badge will be saved, if needed
        mkdir -p "${ISSUE_BADGE_PATH%/*}"
        echo "##[set-output name=issueBadgePath;]${ISSUE_BADGE_PATH}"
      env:
        DEPENDENCIES: 0
        ISSUE_BADGE_PATH: .github/badges/issues.svg

    # Use the output from the `issues` step
    - name: Generate the badge SVG image
      uses: emibcn/badge-action@v1
      id: badge
      with:
        label: 'Open Issues'
        status: ${{ steps.issues.outputs.issuesCnt }}
        color: 'blue,555,daf'
        path: ${{ steps.issues.outputs.issueBadgePath }}
            
    - name: Upload badge as artifact
      uses: actions/upload-artifact@v2
      with:
        name: badge
        path: ${{ steps.issues.outputs.issueBadgePath }}
        if-no-files-found: error
        
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Commit badge
      env:
        CODECOVERAGEBADGE: ${{ steps.issues.outputs.issueBadgePath }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add "${CODECOVERAGEBADGE}"
        git commit -m "Add/Update issue badge"
    - name: Push badge commit
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ steps.extract_branch.outputs.branch }}
