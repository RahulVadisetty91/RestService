on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
        VV_BADGE_PATH: .github/badges/vv-code-count.svg
    name: A job to test this action
    steps:
    - uses: actions/checkout@v1
    - uses: fregante/setup-git-token@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Get 7 days past date
      id: date
      run: 
       echo "::set-output name=date::$(date -d "7 days ago" +%Y-%m-%d)"
      
    - name: Generate a Vera code Severity Count
      id: open_vvcode_count
      run: |
        export VV_ISSUE_COUNT=`curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "User-Agent *" -H "Accept: application/vnd.github.v3+json" -s  https://api.github.com/search/issues?q=repo:${{ github.repository }}++is:open+is:issue+created:%3C%3D${{ steps.date.outputs.date }} | jq --raw-output '[[.items[] | .title | capture("(?<Sev>Severity [0-9]+)")  ] | group_by(.Sev) | map({ key: .[0].Sev, value: "\(length)"})    | from_entries]'`
        echo "Vere Vulnerability Count = ${VV_ISSUE_COUNT}"
        export highSeverity=`echo ${VV_ISSUE_COUNT} | jq -r '.[]."Severity 41" // 0'`
        export veryHighSeverity=`echo ${VV_ISSUE_COUNT} | jq -r '.[]."Severity 5" // 0'`
        echo "Very High Count = ${veryHighSeverity}"
        echo "High Count = ${highSeverity}"
        echo "##[set-output name=veryHighSeverity;]${veryHighSeverity}"
        echo "##[set-output name=highSeverity;]${highSeverity}"
        
    - name: Format a Vera code Severity Count
      id: formatVeryHighSeverityCount
      if: ${{ false }}
      run: |
        if [[ ${{ steps.open_vvcode_count.outputs.veryHighSeverity}} > 0 ]]; then
          echo "1.0."
          echo "::set-output name=veryHighSeverityCount::${{ steps.open_vvcode_count.outputs.veryHighSeverity }}"
          echo "::set-output name=veryHighSeverityColor::red"
        else
          echo "1.1."
          echo "::set-output name=veryHighSeverityCount::0"
          echo "::set-output name=veryHighSeverityColor::green"
        fi
       
        if [[ ${{ steps.open_vvcode_count.outputs.highSeverity}} > 0 ]]; then
          echo "2.0.."
          echo "::set-output name=highSeverityCount::${{ steps.open_vvcode_count.outputs.highSeverity }}"
          echo "::set-output name=highSeverityColor::red"
          
         else
          echo "2.1.."
          echo "::set-output name=highSeverityCount::0"
          echo "::set-output name=highSeverityColor::green"
        fi  

    - name: Display VV Code
      id: displayVVCode
      run: |
        echo "Formatted Very High Count = ${{ steps.open_vvcode_count.outputs.veryHighSeverity }}"
        echo "Formatted High Count = ${{ steps.open_vvcode_count.outputs.highSeverity }}"
        export VHColor=`[ ${{ steps.open_vvcode_count.outputs.veryHighSeverity }} -eq 0 ] && echo "green" || echo "red"`
        export HColor=`[ ${{ steps.open_vvcode_count.outputs.highSeverity }} -eq 0 ] && echo "green" || echo "red"`
        echo "##[set-output name=veryHighSeverityColor;]${VHColor}"
        echo "##[set-output name=highSeverityColor;]${HColor}"
        mkdir -p "${{ env.VV_BADGE_PATH }}%/*"
        
       # Use the output from the `open_vvcode_count` step
    - name: Generate the Vera code count badge SVG image
      uses: emibcn/badge-action@v1
      id: vvbadge
      with:
        label: 'Vera Code Count'
        status: Very High:${{ steps.open_vvcode_count.outputs.veryHighSeverity }},High:${{ steps.open_vvcode_count.outputs.highSeverity }}
        color: '${{ steps.displayVVCode.outputs.veryHighSeverityColor }},${{ steps.displayVVCode.outputs.highSeverityColor }}'
        path: ${{ env.VV_BADGE_PATH }}

